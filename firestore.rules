rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Public read access to usernames, restrict write to authenticated users
    match /usernames/{documentId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /brands/{documentId} {
      allow read: if request.auth != null;
    }
    
    match /trendingbrands/{documentId} {
      allow read: if request.auth != null;
    }
    
    match /categories/{documentId} {
      allow read: if request.auth != null;
    }

    match /followers/{documentId} {
      allow read, create: if request.auth != null;
      allow delete: if request.auth != null && resource.data.user == request.auth.uid;
    }

    match /likes/{documentId} {
      allow read, create: if request.auth != null;
      allow delete: if request.auth != null && resource.data.user == request.auth.uid;
    }

    // Products - Users can manage their own products
    match /products/{documentId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.user == request.auth.uid;

      // Comments - users can manage their own comments
      match /comments/{commentId} {
        allow read, create: if request.auth != null;
        allow update, delete: if request.auth != null && resource.data.user == request.auth.uid;
      }
    }

    // Users
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;

      match /{checkout_sessions}/{documentId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /{orders}/{documentId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /{swapSpotInventory}/{documentId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /{shippingAddress}/{documentId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      match /{reviewsGiven}/{documentId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /{reviews}/{documentId} {
        allow read, write: if request.auth != null;
      }
      match /{searchProfile}/{documentId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Deny all other unmatched access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
